$date
	Mon Mar  7 13:57:35 2022
$end
$version
	Icarus Verilog
$end
$timescale
	10ps
$end
$scope module cpu_tb $end
$var reg 1 ! clk $end
$var reg 1 " reset $end
$scope module micpu $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # z $end
$var wire 1 $ wez $end
$var wire 1 % we3 $end
$var wire 1 & s_inm $end
$var wire 1 ' s_inc $end
$var wire 6 ( opcode [5:0] $end
$var wire 3 ) op_alu [2:0] $end
$scope module camino_datos $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 1 # z $end
$var wire 1 $ wez $end
$var wire 1 % we3 $end
$var wire 10 * sum_mux [9:0] $end
$var wire 1 & s_inm $end
$var wire 1 ' s_inc $end
$var wire 6 + opcode [5:0] $end
$var wire 3 , op_alu [2:0] $end
$var wire 16 - instruccion [15:0] $end
$var wire 1 . alu_ffz $end
$var wire 8 / Sal_alu [7:0] $end
$var wire 10 0 SalPC [9:0] $end
$var wire 8 1 R2 [7:0] $end
$var wire 8 2 R1 [7:0] $end
$var wire 8 3 Mux_Sal_toBR [7:0] $end
$var wire 10 4 Mux_EntPC [9:0] $end
$scope module PC $end
$var wire 1 ! clk $end
$var wire 1 " reset $end
$var wire 10 5 d [9:0] $end
$var reg 10 6 q [9:0] $end
$upscope $end
$scope module alu_cpu $end
$var wire 8 7 y [7:0] $end
$var wire 1 . zero $end
$var wire 3 8 op_alu [2:0] $end
$var wire 8 9 b [7:0] $end
$var wire 8 : a [7:0] $end
$var reg 8 ; s [7:0] $end
$upscope $end
$scope module banco_registros $end
$var wire 1 ! clk $end
$var wire 4 < ra1 [3:0] $end
$var wire 4 = ra2 [3:0] $end
$var wire 4 > wa3 [3:0] $end
$var wire 1 % we3 $end
$var wire 8 ? wd3 [7:0] $end
$var wire 8 @ rd2 [7:0] $end
$var wire 8 A rd1 [7:0] $end
$upscope $end
$scope module ffz $end
$var wire 1 ! clk $end
$var wire 1 . d $end
$var wire 1 " reset $end
$var wire 1 $ carga $end
$var reg 1 # q $end
$upscope $end
$scope module memoria $end
$var wire 10 B a [9:0] $end
$var wire 1 ! clk $end
$var wire 16 C rd [15:0] $end
$upscope $end
$scope module multiplexor_A $end
$var wire 10 D d0 [9:0] $end
$var wire 10 E y [9:0] $end
$var wire 1 ' s $end
$var wire 10 F d1 [9:0] $end
$upscope $end
$scope module multiplexor_B $end
$var wire 8 G d0 [7:0] $end
$var wire 8 H d1 [7:0] $end
$var wire 8 I y [7:0] $end
$var wire 1 & s $end
$upscope $end
$scope module sumador_A $end
$var wire 10 J a [9:0] $end
$var wire 10 K b [9:0] $end
$var wire 10 L y [9:0] $end
$upscope $end
$upscope $end
$scope module unidad_control $end
$var wire 6 M opcode [5:0] $end
$var wire 1 # z $end
$var reg 3 N op_alu [2:0] $end
$var reg 1 ' s_inc $end
$var reg 1 & s_inm $end
$var reg 1 % we3 $end
$var reg 1 $ wez $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 N
b0 M
b1 L
b1 K
b0 J
b0 I
b0 H
b0 G
b1 F
b1 E
b0 D
b0 C
b0 B
b0 A
b0 @
b0 ?
b0 >
b0 =
b0 <
b0 ;
b0 :
b0 9
b0 8
b0 7
b0 6
b1 5
b1 4
b0 3
b0 2
b0 1
b0 0
b0 /
1.
b0 -
b0 ,
b0 +
b1 *
b0 )
b0 (
1'
1&
1%
x$
0#
1"
1!
$end
#1000
0"
#3000
0!
#6000
b10 4
b10 5
b10 E
b10 *
b10 F
b10 L
b1 0
b1 6
b1 B
b1 J
1!
#9000
0!
#12000
b11 4
b11 5
b11 E
b11 *
b11 F
b11 L
b10 0
b10 6
b10 B
b10 J
1!
#15000
0!
#18000
b100 4
b100 5
b100 E
b100 *
b100 F
b100 L
b11 0
b11 6
b11 B
b11 J
1!
#21000
0!
#24000
b101 4
b101 5
b101 E
b101 *
b101 F
b101 L
b100 0
b100 6
b100 B
b100 J
1!
#27000
0!
#30000
b110 4
b110 5
b110 E
b110 *
b110 F
b110 L
b101 0
b101 6
b101 B
b101 J
1!
#33000
0!
#36000
b111 4
b111 5
b111 E
b111 *
b111 F
b111 L
b110 0
b110 6
b110 B
b110 J
1!
#39000
0!
#42000
b1000 4
b1000 5
b1000 E
b1000 *
b1000 F
b1000 L
b111 0
b111 6
b111 B
b111 J
1!
#45000
0!
#48000
b1001 4
b1001 5
b1001 E
b1001 *
b1001 F
b1001 L
b1000 0
b1000 6
b1000 B
b1000 J
1!
#51000
0!
#54000
b1010 4
b1010 5
b1010 E
b1010 *
b1010 F
b1010 L
b1001 0
b1001 6
b1001 B
b1001 J
1!
